/*-----------------------------------------------------------------------------------------------------------
                                                                        
	프로젝트	명	: code-generator                                     
	설정 파일	명	: build.gradle                                          
	설		명	: 프로젝트에 필요한 환경 변수 설정 및 task를 관리한다                                    
                                                                        
 -----------------------------------------------------------------------------------------------------------*/

plugins {
	id 'java'
	id 'maven-publish' //maven 저장소에 배포하게 도와주는 플러그인. 
}

apply plugin: 'eclipse'


/*-----------------------------------------------------------------------------------------------------------
	프로젝트 정보 설정 = 빌드 시 프로젝트 명이 artifactId로 자동 지정
		- group		: 프로젝트가 속해 있는 그룹 정의.
		- version	: 프로젝트 개발 버전 정의 
 -----------------------------------------------------------------------------------------------------------*/
group	= 'kr.co.pionnet.tech'
version	= '1.0'


/*-----------------------------------------------------------------------------------------------------------
	컴파일 정보 설정 : 소스 및 컴파일 될 JDK 버전 정보를 설정한다.
 -----------------------------------------------------------------------------------------------------------*/
sourceCompatibility = '11'
targetCompatibility = '11'

apply from: 'dependency.gradle'                  //의존 라이브러리를 읽어오는 설정 파일


/*-----------------------------------------------------------------------------------------------------------
	local maven 저장소에 배포할 정보를 미리 선언 한다.
 -----------------------------------------------------------------------------------------------------------*/
def dependency = [
	groupId		: "kr.co.pionnet.tech",
	artifactId	: "code-generator",
	version		: "1.0"
]

/*-----------------------------------------------------------------------------------------------------------
	jar 파일을 build 후 생성 한다.
 -----------------------------------------------------------------------------------------------------------*/

// 일반 jar 파일 생성 실행 설정 
jar {
	enabled = true
    baseName = "${dependency.artifactId}"
    version =  "${dependency.version}"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
/*-----------------------------------------------------------------------------------------------------------
	컴파일 정보 설정 : 소스 및 컴파일 될 JDK 버전 정보를 설정한다.
 -----------------------------------------------------------------------------------------------------------*/
sourceCompatibility = '11'
targetCompatibility = '11'


/*-----------------------------------------------------------------------------------------------------------
	전체 프로젝트 : Root 프로젝트 하위에 모두 적용 되는 설정 정의
 -----------------------------------------------------------------------------------------------------------*/
//전체 프로젝트 인코딩 지정.
allprojects {
	
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
        
    tasks.withType(Test) {
       systemProperty "file.encoding", "UTF-8"
    }
    
	sourceSets { 
	
	    main { 
	        java { 
	            srcDirs "src/main/java"
	        } 
	        resources { 
	        	//기본 적으로는 src/main/resources 폴더만 classpath로 잡혀 있으나 개발환경 별로 분리하기 위하여 아래처럼 선언 함.
	            srcDirs "src/main/resources"
	        } 
	    } 
	}
	
	//이클립스에서 gradle이용하여 설정 후 갱신 하면 eclipse와 설정 값과 일부 맞지 않는다. 이럴 때 강제로 맞춰주기 위하여 설정.
	eclipse {
	 
		classpath {
	  
		  	//이클립스 플러그인을 이용하여 .classpath 파일을 관리한다.
			file.whenMerged { cp ->
			
				// resources-config 폴더일 경우 처리.
				def resourceSrc = cp.entries.findAll {
					it instanceof org.gradle.plugins.ide.eclipse.model.SourceFolder
				 }
				 
				 
				// 중복 엔트리 삭제. gradle eclipse를 두 번이상 실행하면 test 관련 디렉토리가 중복 생성된다.
				cp.entries.unique()
			}
		}
	}

}


task copyJar(type: Copy) {
    from 'build/libs/code-generator-1.0.jar'
    into "../common/generator/lib"
}

build.dependsOn copyJar
